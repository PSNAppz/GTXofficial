<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAQAAAAAADoAgAAJgAAABAQEAAAAAAAKAEAAA4DAAAoAAAAIAAAAEAAAAABAAQAAAAAAIAC
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////ABERERERERERERH///////8bMzMzMzMzMzMzEP8A/wD/G/v7+/v7
        +4iI+zEPAA8ADxu/v7+/v7AACI+zHwAPAA8b+/v7+/sO4uCL+zH/////G7m5ubm5Dy4gibmzEP8A/xv7
        +/v7+w7i4Iv7+zEPAA8bubm5ubkP7+C5ubmzHwAPG/v7+/v78AAL+/v7+zH//xu5ubm5ubmIiLm5ubmz
        EP8b+/v7+/vwAAiL+/v7+zEPG7m5ubm5Dy4gibm5ubmzHxubm5ubmw7i4Iubm5ubmzEbubm5ubkPLiCJ
        ubm5ubkxG5ubm5ubDvLgiJubm5ubMRu5ubm5ubDuLgiJubm5uTEbm5ubm5uQ8ubgiJubm5sxG7m5ubm5
        uQ8uLgiJubm5MRuZmZmZmZmQ8uLgiJmZmTEbubm5ubm5uQ8uLgi5ubkxG5mZmZmIiJmQ8uIIiZmZMRu5
        ubmwAAiJuQ8uIIm5uTEbuZmZD+LgiZkO4uCJmZkx8bsZGQ4uIIiIDy4giRkZMfAbuZkP4uIAAOLi4ImZ
        mTHwAbsZgO4uLi4uLiAZGRkx8AAbsZDy4uLi4uIIkZGRMf//8bsZDv4uLi4uCRkZGTHwD/AbsZAP7+/v
        4JGRkZEx8ADwAbsZEAAAABkZGRkZMfAA8AAbu7u7u7u7u7u7u7H/////8RERERERERERERERAAAP/wAA
        Bd0AAAP/AAAB/wAAAP8AAABdAAAAPwAAAB8AAAAPAAAABQAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAwAAAAOAAAADwAAAA+AAAAOwAAAD+AAAA/wAAAP+A
        AAAoAAAAEAAAACAAAAABAAQAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAA
        AACAAIAAgIAAAMDAwACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAC7uwAAAA
        AAALu7uAAAAAAAu7uw/gAAAAC7u7D/AAAAAAu7uwCAAAAAALuw/gAAAAAAC7D+CwAAAAAIuw/gsAAAAA
        gAsP4LAAAAAP4A/guwAAAA/u7uC7sAAAAP//C7uwAAAAAAC7u7AAAAAAAAu7sAAAAAAAAAAAB/8AAAP/
        AAAAfwAAAD8AAAA/AACAPwAAwB8AAOAPAADwBwAA8AMAAPABAADwAAAA+AAAAPwAAAD/wAAA/+AAAA==
</value>
  </data>
</root>